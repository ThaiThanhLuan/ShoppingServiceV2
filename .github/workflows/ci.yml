name: ci

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
env:
      REPO_NAME: ShoppingServiceV2 # {"$kpt-set":"app"}
jobs:
  build:

    runs-on: ubuntu-latest  
    steps:
    - uses: actions/checkout@v2
      with: 
          fetch-depth: '0'
    - name: Bump version and push tag dry-run
      id: tag_version
      uses: mathieudutour/github-tag-action@v5.1
      with:
         github_token: ${{ secrets.TOKEN_GITHUB }}
         dry_run: true
         release_branches: develop
          
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x
    - uses: actions/cache@v2
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
    - name: Restore dependencies
      run: dotnet restore --locked-mode
    - name: Build --no-restore -c Release
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal -c Release
    - name: Install Amazon Lambda Tools
      run: dotnet tool install -g Amazon.Lambda.Tools --framework netcoreapp3.1 && dotnet tool update -g Amazon.Lambda.Tools
    - name: Export Path for Lambda Tools
      run: export PATH="$PATH:/root/.dotnet/tools"
    - name: Package Lambda
      run: dotnet lambda package --configuration Release --framework netcoreapp3.1 --output-package bin/Release/netcoreapp3.1/${{ env.REPO_NAME }}-${{ steps.tag_version.outputs.new_version }}.zip --msbuild-parameters "/p:PublishReadyToRun=true --self-contained false"  
    - name: promote-changelog
      run: |
         sed -i -e "s/^  version:.*/  version: ${{ steps.tag_version.outputs.new_version }}/" serverless.yml
         git config user.name github-actions
         git config user.email github-actions@github.com
         git commit -a -m "chore: release ${{ steps.tag_version.outputs.new_version }}" --allow-empty
         git tag -fa ${{ steps.tag_version.outputs.new_tag }} -m "Release version ${{ steps.tag_version.outputs.new_version }}"
         git push origin ${{ steps.tag_version.outputs.new_tag }}

    - name: Create Release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ steps.tag_version.outputs.new_tag }}
        release_name: ${{ steps.tag_version.outputs.new_tag }}
        body: ${{ steps.tag_version.outputs.changelog }}
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
    - name: serverless deploy
      uses: serverless/github-action@master
      with:
        rgs: -c "serverless plugin install --name serverless-apigateway-route-settings && serverless deploy --stage dev"
        entrypoint: /bin/sh
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.SHOPPING_SERVICE_AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SHOPPING_SERVICE_AWS_SECRET_ACCESS_KEY }}
        QUEUE_USER: ${{ secrets.SHOPPING_QUEUE_USER }}
        QUEUE_PASSWORD: ${{ secrets.SHOPPING_QUEUE_PASSWORD }}
        QUEUE_HOST: ${{ secrets.SHOPPING_QUEUE_HOST }}
        QUEUE_PORT: ${{ secrets.SHOPPING_QUEUE_PORT }}

    - name: Configure AWS credentials from Test account
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.ShOPPING_SERVICE_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.SHOPPING_SERVICE_AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1
      