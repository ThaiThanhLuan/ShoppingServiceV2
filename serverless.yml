
# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: shopping-service
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '3'

custom:
  version: 0.0.34-main.0

plugins:
  - serverless-apigateway-route-settings

provider:
  name: aws
  runtime: dotnetcore3.1
  stage: dev
  region: eu-central-1
  logs:
    httpApi: true
  httpApi:
    payload: '1.0' #Or use 1.0

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:ListBucket"
        - "s3:*"
        - lambda:InvokeFunction
        - lambda:InvokeAsync
      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
    - Effect: "Allow"
      Action:
        - "s3:GetObject"
      Resource:
        Fn::Join:
          - ""
          - - "arn:aws:s3:::"
            - "Ref" : "ServerlessDeploymentBucket"
            - "/*"
    - Effect: "Allow"
      Action:
        - "s3:GetObject"
        - "s3:PutObject"
      Resource: "arn:aws:s3:::routing3-cache-files/*"

package:
  individually: true
functions:
  shopping-service-demo:
    environment:
      Host: ${env:QUEUE_HOST}    #!ImportValue ${self:provider.stage}-DBHost
      UserName: ${env:QUEUE_USER}
      PassWord: ${env:QUEUE_PASSWORD}
      Port: ${env:QUEUE_PORT}
      AUTH_VALID_AUDIENCE: 'ApplicationUser'
    handler: ShoppingServiceV2::ShoppingServiceV2.LambdaEntryPoint::FunctionHandlerAsync

    vpc: # Optional VPC. But if you use VPC then both subproperties (securityGroupIds and subnetIds) are required
      securityGroupIds:
        - sg-067d40de060df307c
      subnetIds:
        - subnet-0b583ca34e96879b5
        - subnet-08d23120546babfc9
        - subnet-0da276d776af7d671
    # you can add packaging information here
    package:
      artifact: bin/Release/netcoreapp3.1/shopping-service-demo-${self:custom.version}.zip
    timeout: 20  
    events:
      - httpApi:
          method: GET
          path: /swagger/index.html
      - httpApi:
          method: GET
          path: /swagger/v1/swagger.json
      - httpApi:
          method: GET
          path: /swagger/swagger-ui.css
      - httpApi:
          method: GET
          path: /swagger/swagger-ui-bundle.js
      - httpApi:
          method: GET
          path: /swagger/swagger-ui-standalone-preset.js
      - httpApi:
          method: POST
          path: /product
      - httpApi:
          method: GET
          path: /api/S3Proxy
